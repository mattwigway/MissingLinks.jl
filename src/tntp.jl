function write_tntp_meta(io, meta)
    for (k, v) in pairs(meta)
        k = uppercase(k)
        occursin(r"^[A-Z ]+$", k) || error("Invalid metadata key $k")
        v isa Number || occursin(r"^[A-Za-z0-9\.]+$", v) || error("Invalid metadata value $v")

        println(io, "<$k> $v")
    end

    println(io, "<END OF METADATA>")
    println(io, "")
end

function write_tntp_body(io, G)
    body = map(edge_labels(G)) do (v1, v2)
        e = G[v1, v2]
        (
            # using vertex indices because they are contiguous even after simplification
            init_node=code_for(G, v1),
            term_node=code_for(G, v2),
            length=e.length_m,
            link_type=e.link_type
        )
    end |> DataFrame

    # standard cols and order from https://github.com/bstabler/TransportationNetworks
    cols = ["init_node", "term_node", "capacity", "length", "free_flow_time", "b", "power", "speed_limit", "toll", "link_type"]
    for col ∈ cols
        if col ∉ names(body)
            body[!, col] .= missing
        end
    end

    # tntp files don't really have a header, but we sneak one in as a comment
    write(io, "~")

    # without append somehow it seeks backwards and overwrites the file? not sure how that's possible
    CSV.write(io, body[!, cols], delim="\t", newline="\t;\n", append=true, writeheader=true)
end

"""
    write_tntp(filename, G)

Write a graph out in [TNTP](https://github.com/bstabler/TransportationNetworks) format for use in other software
"""
function write_tntp(filename, G)
    meta = Dict(
        "Number of zones"=>nv(G),
        "Number of nodes"=>nv(G),
        "First thru node"=>1,
        "Number of links"=>ne(G)
    )

    open(filename, "w") do f
        println(f, "~ TNTP file generated by MissingLinks.jl (https://github.com/mattwigway/MissingLinks.jl) at $(Dates.now())")

        write_tntp_meta(f, meta)
        write_tntp_body(f, G)
    end

    nothing
end